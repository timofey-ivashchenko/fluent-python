>>> from collections import deque
>>> # The optional maxlen argument sets the maximum number of items allowed in
>>> # this instance of deque; this sets a read-only maxlen instance attribute.
>>> dq = deque(range(10), maxlen=10)
>>> dq
deque([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], maxlen=10)
>>> # Rotating with n > 0 takes items from the right end and prepends them to
>>> # the left; when n < 0 items are taken from left and appended to the right.
>>> dq.rotate(3)
>>> dq
deque([7, 8, 9, 0, 1, 2, 3, 4, 5, 6], maxlen=10)
>>> dq.rotate(-4)
>>> dq
deque([1, 2, 3, 4, 5, 6, 7, 8, 9, 0], maxlen=10)
>>> # Appending to a deque that is full (len(d) == d.maxlen) discards items
>>> # from the other end; note in the next line that the 0 is dropped.
>>> dq.appendleft(-1)
>>> dq
deque([-1, 1, 2, 3, 4, 5, 6, 7, 8, 9], maxlen=10)
>>> # Adding three items to the right pushes out the leftmost -1, 1, and 2.
>>> dq.extend([11, 22, 33])
>>> dq
deque([3, 4, 5, 6, 7, 8, 9, 11, 22, 33], maxlen=10)
>>> # Note that extendleft(iter) works by appending each successive item of the
>>> # iter argument to the left of the deque, therefore the final position of
>>> # the items is reversed.
>>> dq.extendleft([10, 20, 30, 40])
>>> dq
deque([40, 30, 20, 10, 3, 4, 5, 6, 7, 8], maxlen=10)
